import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/foundation.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'my_cart_provider.dart';

class MyOrder {
  String id;
  DateTime date;
  int amount;
  String extraNotes;
  String address;
  List<CartItem> items;

  MyOrder({
    @required this.id,
    @required this.amount,
    @required this.date,
    @required this.extraNotes,
    @required this.address,
    @required this.items,
  });
}

class MyOrdersProvider with ChangeNotifier {
  List<MyOrder> _myOrders = [];
  final userId = FirebaseAuth.instance.currentUser.uid;

  List<MyOrder> get myOrders {
    return [..._myOrders];
  }

  Future<void> fetchOrders() async {
    print('Your id is $userId');
    String url = 'https://fooddeliveryapp-bf9bd-default-rtdb.firebaseio.com/orders/$userId.json';
    try {
      final response = await http.get(Uri.parse(url));
      final extractedData = json.decode(response.body) as Map<String, dynamic>;
      final List<MyOrder> fetchedOrders = [];
      if(extractedData == null){
        return;
      }
      //convert fetched data which is a map to a list and store it in fetchedOrders
      extractedData.forEach((myOrderId, myOrderData) {
        fetchedOrders.add(
          MyOrder(
            id: myOrderId,
            amount: myOrderData['amount'],
            date: DateTime.parse(myOrderData['date']),
            extraNotes: myOrderData['extraNotes'],
            address: myOrderData['address'],
            items: (myOrderData['items'] as List<dynamic>)
                .map(
                  (item) => CartItem(
                    id: item['id'],
                    title: item['title'],
                    price: item['price'],
                    quantity: item['quantity'],
                    imageUrl: item['imageUrl'],
                  ),
                )
                .toList(),
          ),
        );
      });
      _myOrders = fetchedOrders;
      notifyListeners();
    } catch (e) {
      print('Error Error $e');
      throw e;
    }
  }

  Future<void> addOrder(List<CartItem> items, int amount, String extraNotes, String address) async {
    String url = 'https://fooddeliveryapp-bf9bd-default-rtdb.firebaseio.com/orders/$userId.json';
    final timestamp = DateTime.now();
    try{
      final response = await http.post(Uri.parse(url),
          body: json.encode({
            'amount': amount,
            'date': timestamp.toIso8601String(),
            'extraNotes': extraNotes ?? '',
            'address': address,
            'items': items
                .map((item) => {
              'id': item.id,
              'title': item.title,
              'price': item.price,
              'imageUrl': item.imageUrl,
              'quantity': item.quantity,
            })
                .toList(),
          }));
      if(response.statusCode == 200){
        _myOrders.insert(
          0,
          MyOrder(
            //to get the id generated by firebase
            id: json.decode(response.body)['name'],
            amount: amount,
            date: timestamp,
            extraNotes: extraNotes ?? '',
            address: address,
            items: items,
          ),
        );
        notifyListeners();
      } else {
        throw Error;
      }
    } catch(e){
      throw(e);
    }
  }


}
